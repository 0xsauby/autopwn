# autopwn yaml tool config file

# The name as it will be referenced by in assessments
name: example

# Location of the file on filesystem
binary_location: /usr/bin/example

# Website
url: http://example.net/

# Rules which must be abided by in order for the tool to be executed
# Valid items are:
# * equals
# * not-equals
# * less-than
# * greater-than
# * target-parameter-exists
rules:
   target-parameter-exists: ['ip','domain_name','port_number','protocol']
   equals:
      'protocol': 'https'
   not-equals:
      'domain_name': ['localhost','127.0.0.1']

# Execute shell commands before and/or after tool execution
# Pre and post tool execution commands will always run one
# after another (even if parallel option set)
pre_tool_execution: "sleep 5"
post_tool_execution: "/usr/bin/example_report {output_dir}"

# Tool arguments
# Python's str.format() is used for variable replacement. Valid entries are:
# * domain_name
# * ip
# * protocol (returns 'http' or 'https')
# * date (current date in format 20150226_213959) # date =  strftime("%Y%m%d_%H%M%S")
# * port_number (if target port number has been specified)
# * output_dir (directory where tool output will be saved for specific target)
arguments: "{protocol}://{domain_name}:{port_number} -o {output_dir}/{date}_example_{domain_name}"

# Given the arguments option, will this tool generate output? If redirection is used,
# then this is not going to be the case (excluding stderr).
# Specifyng this option will determine whether or not a stdout file for the tool
# is generated
stdout: True
